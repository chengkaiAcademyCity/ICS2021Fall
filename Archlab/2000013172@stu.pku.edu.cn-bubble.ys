# Kai Cheng
# 2000013172

# Execution begins at address 0 
    .pos 0
    irmovq stack, %rsp      # Set up stack pointer
    call main        # Execute main program
    halt            # Terminate program 

# Sample Array of 6 elements
    .align 8
array:    
    .quad 0xbca
    .quad 0xcba
    .quad 0xacb
    .quad 0xcab
    .quad 0xabc
    .quad 0xbac

main:   
    irmovq array,%rdi
    irmovq $6,%rsi
    call bubble_sort       # bubble_sort(array,6)
    ret

# void bubble_sort(long *data, long count)
# data in %rdi, count in %rsi
bubble_sort:   
    addq %rsi,%rsi
    addq %rsi,%rsi
    addq %rsi,%rsi
    addq %rdi,%rsi
    irmovq $8,%r8
    subq %r8,%rsi
    jmp con1
con3:
    irmovq $8,%r8
    addq %r8,%rax    
con4:
    rrmovq %rax,%r8
    subq %rsi,%r8
    jge con2
    mrmovq 8(%rax),%rdx
    mrmovq (%rax),%rcx
    rrmovq %rdx,%r8
    subq %rcx,%r8
    jge con3
    rmmovq %rcx,8(%rax)
    rmmovq %rdx,(%rax)
    jmp con3
con2:
    irmovq $8,%r8
    subq %r8,%rsi
con1:
    rrmovq %rsi,%r8
    subq %rdi,%r8
    jle return
    rrmovq %rdi,%rax
    jmp con4
return:
    ret

# Stack starts here and grows to lower addresses
    .pos 0x200
stack:
